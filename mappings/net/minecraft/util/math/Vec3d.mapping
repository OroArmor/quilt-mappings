CLASS net/minecraft/unmapped/C_xxfpupgv net/minecraft/util/math/Vec3d
	COMMENT An immutable vector composed of 3 doubles.
	COMMENT
	COMMENT <p>This vector class is used for representing position, velocity,
	COMMENT rotation, color, etc.
	COMMENT
	COMMENT <p>This vector has proper {@link #hashCode()} and {@link #equals(Object)}
	COMMENT implementations and can be used as a map key.
	COMMENT
	COMMENT @see Vec3i
	COMMENT @see Vec3f
	FIELD f_dafmcipi z D
		COMMENT The Z coordinate of this vector.
	FIELD f_iqympxos y D
		COMMENT The Y coordinate of this vector.
	FIELD f_rwjvjlql x D
		COMMENT The X coordinate of this vector.
	FIELD f_djvpraja ZERO Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT The zero vector (0, 0, 0).
	METHOD <init> (DDD)V
		COMMENT Creates a vector of the given coordinates.
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD <init> (Lnet/minecraft/unmapped/C_fgwfwivz;)V
		COMMENT Copies the given vector.
		ARG 1 vec
	METHOD equals (Ljava/lang/Object;)Z
		ARG 1 o
	METHOD m_trloawyb add (Lnet/minecraft/unmapped/C_xxfpupgv;)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Returns the sum of this vector and the given vector.
		COMMENT
		COMMENT @see #add(double, double, double)
		ARG 1 vec
	METHOD m_xgidscwg subtract (Lnet/minecraft/unmapped/C_xxfpupgv;)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Subtracts the given vector from this vector.
		COMMENT
		COMMENT @see #subtract(double, double, double)
		COMMENT @see #relativize(Vec3d)
		COMMENT @return the difference between this vector and the given vector
		ARG 1 vec
	METHOD m_uqvofgck multiply (D)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Return a vector whose coordinates are the coordinates of this vector
		COMMENT each multiplied by the given scalar value.
		COMMENT
		COMMENT @see #multiply(Vec3d)
		COMMENT @see #multiply(double, double, double)
		ARG 1 value
	METHOD m_upvurqla distanceTo (Lnet/minecraft/unmapped/C_xxfpupgv;)D
		COMMENT Returns the distance between this vector and the given vector.
		COMMENT
		COMMENT @see #squaredDistanceTo(Vec3d)
		ARG 1 vec
	METHOD m_bjmzeumb subtract (DDD)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Subtracts the given vector from this vector.
		COMMENT
		COMMENT @see #relativize(Vec3d)
		COMMENT @return the difference between this vector and the given vector
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD m_sgghhyyp rotateY (F)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Rotates this vector by the given angle counterclockwise around the Y axis.
		ARG 1 angle
			COMMENT the angle in radians
	METHOD m_nrybjonk squaredDistanceTo (Lnet/minecraft/unmapped/C_xxfpupgv;)D
		COMMENT Returns the squared distance between this vector and the given vector.
		COMMENT
		COMMENT <p>Can be used for fast comparison between distances.
		COMMENT
		COMMENT @see #squaredDistanceTo(double, double, double)
		COMMENT @see #distanceTo(Vec3d)
		ARG 1 vec
	METHOD m_hmjfqycu dotProduct (Lnet/minecraft/unmapped/C_xxfpupgv;)D
		COMMENT Returns the dot product of this vector and the given vector.
		ARG 1 vec
	METHOD m_nuzsnbbb lengthSquared ()D
		COMMENT {@return the squared length of this vector}
		COMMENT
		COMMENT <p>Can be used for fast comparison between lengths.
		COMMENT
		COMMENT @see #length()
	METHOD m_fwhuylyq squaredDistanceTo (DDD)D
		COMMENT Returns the squared distance between this vector and the given vector.
		COMMENT
		COMMENT <p>Can be used for fast comparison between distances.
		COMMENT
		COMMENT @see #squaredDistanceTo(Vec3d)
		COMMENT @see #distanceTo(Vec3d)
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD m_basglqkj normalize ()Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Normalizes this vector.
		COMMENT
		COMMENT <p>Normalized vector is a vector with the same direction but with
		COMMENT length 1. Each coordinate of normalized vector has value between 0
		COMMENT and 1.
		COMMENT
		COMMENT @return the normalized vector of this vector
	METHOD m_dppphkni fromPolar (FF)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Converts pitch and yaw into a direction vector.
		COMMENT
		COMMENT @see #fromPolar(Vec2f)
		ARG 0 pitch
		ARG 1 yaw
	METHOD m_qmxdprey add (DDD)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Returns the sum of this vector and the given vector.
		COMMENT
		COMMENT @see #add(Vec3d)
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD m_prdkljwa floorAlongAxes (Ljava/util/EnumSet;)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Applies the floor function to the coordinates chosen by the given axes.
		ARG 1 axes
	METHOD m_gqhxjfzx length ()D
		COMMENT {@return the length of this vector}
		COMMENT
		COMMENT <p>The length of a vector is equivalent to the distance between that
		COMMENT vector and the {@linkplain #ZERO} vector.
		COMMENT
		COMMENT @see #lengthSquared()
	METHOD m_qxepadtl fromPolar (Lnet/minecraft/unmapped/C_mosdwlrk;)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Converts pitch and yaw into a direction vector.
		COMMENT
		COMMENT @see #fromPolar(float, float)
		ARG 0 polar
			COMMENT the vector composed of pitch and yaw
	METHOD m_rhzlgbzo relativize (Lnet/minecraft/unmapped/C_xxfpupgv;)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Subtracts this vector from the given vector.
		COMMENT
		COMMENT @see #subtract(Vec3d)
		COMMENT @return the difference between the given vector and this vector
		ARG 1 vec
	METHOD m_wsgsgagw crossProduct (Lnet/minecraft/unmapped/C_xxfpupgv;)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Returns the cross product of this vector and the given vector.
		ARG 1 vec
	METHOD m_ebhverwz rotateX (F)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Rotates this vector by the given angle counterclockwise around the X axis.
		ARG 1 angle
			COMMENT the angle in radians
	METHOD m_rqusbayv getComponentAlongAxis (Lnet/minecraft/unmapped/C_fxhiuupx$C_zouofpmr;)D
		COMMENT Returns the coordinate chosen by the given axis.
		ARG 1 axis
	METHOD m_lfootdxp multiply (DDD)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Returns a vector whose coordinates are the product of each pair of
		COMMENT coordinates in this vector and the given vector.
		COMMENT
		COMMENT @see #multiply(Vec3d)
		COMMENT @see #multiply(double)
		ARG 1 x
		ARG 3 y
		ARG 5 z
	METHOD m_qvsrgpqb multiply (Lnet/minecraft/unmapped/C_xxfpupgv;)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Returns a vector whose coordinates are the product of each pair of
		COMMENT coordinates in this vector and the given vector.
		COMMENT
		COMMENT @see #multiply(double, double, double)
		COMMENT @see #multiply(double)
		ARG 1 vec
	METHOD m_qbggeqox negate ()Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Creates a vector with the same length but with the opposite direction.
	METHOD m_imwvcmdy unpackRgb (I)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Converts a packed RGB color into a vector of (red, green, blue).
		COMMENT
		COMMENT @return the vector representing the given color; each coordinate has
		COMMENT value between 0 and 1
		ARG 0 rgb
			COMMENT the color in the 0xRRGGBB format
	METHOD m_vxxqwvad isInRange (Lnet/minecraft/unmapped/C_bwqohbgo;D)Z
		COMMENT Checks if the distance between this vector and the given position is
		COMMENT less than {@code radius}.
		ARG 1 pos
		ARG 2 radius
	METHOD m_rucwaeay ofCenter (Lnet/minecraft/unmapped/C_hhqtviec;)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Creates a vector representing the center of the given block position.
		ARG 0 vec
	METHOD m_fwsyeejm of (Lnet/minecraft/unmapped/C_hhqtviec;)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Copies the given vector.
		ARG 0 vec
	METHOD m_ttgsamcu ofBottomCenter (Lnet/minecraft/unmapped/C_hhqtviec;)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Creates a vector representing the bottom center of the given block
		COMMENT position.
		COMMENT
		COMMENT <p>The bottom center of a block position {@code pos} is
		COMMENT {@code (pos.getX() + 0.5, pos.getY(), pos.getZ() + 0.5)}.
		COMMENT
		COMMENT @see #ofCenter(Vec3i)
		ARG 0 vec
	METHOD m_sjqjuxxf ofCenter (Lnet/minecraft/unmapped/C_hhqtviec;D)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Creates a vector representing the center of the given block position but
		COMMENT with the given offset for the Y coordinate.
		COMMENT
		COMMENT @return a vector of {@code (vec.getX() + 0.5, vec.getY() + deltaY,
		COMMENT vec.getZ() + 0.5)}
		ARG 0 vec
		ARG 1 deltaY
	METHOD m_dmcpswmx rotateZ (F)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Rotates this vector by the given angle counterclockwise around the Z axis.
		ARG 1 angle
			COMMENT the angle in radians
	METHOD m_dfecqdhs lerp (Lnet/minecraft/unmapped/C_xxfpupgv;D)Lnet/minecraft/unmapped/C_xxfpupgv;
		COMMENT Performs linear interpolation from this vector to the given vector.
		ARG 1 to
			COMMENT the vector to interpolate to
		ARG 2 delta
			COMMENT the interpolation coefficient in the range between 0 and 1
	METHOD m_mmjfmcva horizontalLength ()D
		COMMENT {@return the horizontal length of this vector}
		COMMENT
		COMMENT <p>This length is same as the length of a 2-vector with the {@link #x} and
		COMMENT {@link #z} components of this vector, or the euclidean distance between
		COMMENT {@code (x, z)} and the origin.
		COMMENT
		COMMENT @see #horizontalLengthSquared()
	METHOD m_xthutzng horizontalLengthSquared ()D
		COMMENT {@return the squared horizontal length of this vector}
		COMMENT
		COMMENT <p>Can be used for fast comparison between horizontal lengths.
		COMMENT
		COMMENT @see #horizontalLength()